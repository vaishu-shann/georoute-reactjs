{"ast":null,"code":"var _jsxFileName = \"H:\\\\Thewav\\\\leaflet-react\\\\src\\\\components\\\\route.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, GeoJSON, Marker, Popup } from \"react-leaflet\";\nimport leafGreen from \"../assets/leaf-green.png\";\nimport leafRed from \"../assets/leaf-red.png\";\nimport leafOrange from \"../assets/leaf-orange.png\";\nimport leafShadow from \"../assets/leaf-shadow.png\";\nimport mapData from '../data/mock.json';\nexport default class Route extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      greenIcon: {\n        lat: 35.787449,\n        lng: -78.6438197\n      },\n      redIcon: {\n        lat: 35.774416,\n        lng: -78.633271\n      },\n      orangeIcon: {\n        lat: 35.77279,\n        lng: -78.652305\n      },\n      zoom: 13\n    };\n    this.grenIcon = L.icon({\n      iconUrl: leafGreen,\n      shadowUrl: leafShadow,\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -76]\n    });\n    this.redIcon = L.icon({\n      iconUrl: leafRed,\n      shadowUrl: leafShadow,\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -86]\n    });\n    this.orangeIcon = L.icon({\n      iconUrl: leafOrange,\n      shadowUrl: leafShadow,\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -86]\n    });\n\n    this.componentDidMount = () => {\n      var _features$, _features$$geometry;\n\n      console.log(mapData);\n      const features = mapData.features;\n      let coordinates = (_features$ = features[0]) === null || _features$ === void 0 ? void 0 : (_features$$geometry = _features$.geometry) === null || _features$$geometry === void 0 ? void 0 : _features$$geometry.coordinates;\n\n      for (var i = 0; i <= coordinates.length - 1; i++) {\n        console.log(co);\n      }\n\n      console.log(coordinates);\n    };\n  }\n\n  render() {\n    const positionRedIcon = [this.state.redIcon.lat, this.state.redIcon.lng];\n    const positionGreenIcon = [this.state.greenIcon.lat, this.state.greenIcon.lng];\n    const positionOrangeIcon = [this.state.orangeIcon.lat, this.state.orangeIcon.lng]; // console.log(mapData)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: positionGreenIcon,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(GeoJSON, {\n      data: mapData.features,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["H:/Thewav/leaflet-react/src/components/route.js"],"names":["React","Component","L","Map","TileLayer","GeoJSON","Marker","Popup","leafGreen","leafRed","leafOrange","leafShadow","mapData","Route","state","greenIcon","lat","lng","redIcon","orangeIcon","zoom","grenIcon","icon","iconUrl","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","componentDidMount","console","log","features","coordinates","geometry","i","length","co","render","positionRedIcon","positionGreenIcon","positionOrangeIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,GAAT,EAAcC,SAAd,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,eAAtD;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3Ca,KAD2C,GACnC;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAE,SADI;AAETC,QAAAA,GAAG,EAAE,CAAC;AAFG,OADL;AAKNC,MAAAA,OAAO,EAAE;AACPF,QAAAA,GAAG,EAAE,SADE;AAEPC,QAAAA,GAAG,EAAE,CAAC;AAFC,OALH;AASNE,MAAAA,UAAU,EAAE;AACVH,QAAAA,GAAG,EAAE,QADK;AAEVC,QAAAA,GAAG,EAAE,CAAC;AAFI,OATN;AAaNG,MAAAA,IAAI,EAAE;AAbA,KADmC;AAAA,SAiB3CC,QAjB2C,GAiBhCnB,CAAC,CAACoB,IAAF,CAAO;AAChBC,MAAAA,OAAO,EAAEf,SADO;AAEhBgB,MAAAA,SAAS,EAAEb,UAFK;AAGhBc,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHM;AAGI;AACpBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJI;AAIM;AACtBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALI;AAKM;AACtBC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CANE;AAMO;AACvBC,MAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN;AAPG,KAAP,CAjBgC;AAAA,SA2B3CX,OA3B2C,GA2BjChB,CAAC,CAACoB,IAAF,CAAO;AACfC,MAAAA,OAAO,EAAEd,OADM;AAEfe,MAAAA,SAAS,EAAEb,UAFI;AAGfc,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHK;AAGK;AACpBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJG;AAIO;AACtBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALG;AAKO;AACtBC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CANC;AAMQ;AACvBC,MAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN;AAPE,KAAP,CA3BiC;AAAA,SAqC3CV,UArC2C,GAqC9BjB,CAAC,CAACoB,IAAF,CAAO;AAClBC,MAAAA,OAAO,EAAEb,UADS;AAElBc,MAAAA,SAAS,EAAEb,UAFO;AAGlBc,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHQ;AAGE;AACpBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJM;AAII;AACtBC,MAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALM;AAKI;AACtBC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CANI;AAMK;AACvBC,MAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN;AAPK,KAAP,CArC8B;;AAAA,SA8C3CC,iBA9C2C,GA8CzB,MAAI;AAAA;;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AADoB,YAEbqB,QAFa,GAEHrB,OAFG,CAEbqB,QAFa;AAGpB,UAAIC,WAAW,iBAACD,QAAQ,CAAC,CAAD,CAAT,sEAAC,WAAaE,QAAd,wDAAC,oBAAuBD,WAAvC;;AACA,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEF,WAAW,CAACG,MAAZ,GAAmB,CAAlC,EAAoCD,CAAC,EAArC,EAAwC;AACpCL,QAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ;AACH;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACD,KAtD0C;AAAA;;AAuD3CK,EAAAA,MAAM,GAAG;AACP,UAAMC,eAAe,GAAG,CAAC,KAAK1B,KAAL,CAAWI,OAAX,CAAmBF,GAApB,EAAyB,KAAKF,KAAL,CAAWI,OAAX,CAAmBD,GAA5C,CAAxB;AACA,UAAMwB,iBAAiB,GAAG,CACxB,KAAK3B,KAAL,CAAWC,SAAX,CAAqBC,GADG,EAExB,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,GAFG,CAA1B;AAIA,UAAMyB,kBAAkB,GAAG,CACzB,KAAK5B,KAAL,CAAWK,UAAX,CAAsBH,GADG,EAEzB,KAAKF,KAAL,CAAWK,UAAX,CAAsBF,GAFG,CAA3B,CANO,CAUP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,MAAM,EAAEwB,iBAA7B;AAAgD,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWM,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,2EADd;AAEE,MAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKA,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAER,OAAO,CAACqB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADF,CADF;AAqBD;;AAvF0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport L from \"leaflet\";\r\nimport { Map, TileLayer,GeoJSON, Marker, Popup } from \"react-leaflet\";\r\nimport leafGreen from \"../assets/leaf-green.png\";\r\nimport leafRed from \"../assets/leaf-red.png\";\r\nimport leafOrange from \"../assets/leaf-orange.png\";\r\nimport leafShadow from \"../assets/leaf-shadow.png\";\r\nimport mapData from '../data/mock.json';\r\n\r\nexport default class Route extends Component {\r\n  state = {\r\n    greenIcon: {\r\n      lat: 35.787449,\r\n      lng: -78.6438197,\r\n    },\r\n    redIcon: {\r\n      lat: 35.774416,\r\n      lng: -78.633271,\r\n    },\r\n    orangeIcon: {\r\n      lat: 35.77279,\r\n      lng: -78.652305,\r\n    },\r\n    zoom: 13,\r\n  };\r\n\r\n  grenIcon = L.icon({\r\n    iconUrl: leafGreen,\r\n    shadowUrl: leafShadow,\r\n    iconSize: [38, 95], // size of the icon\r\n    shadowSize: [50, 64], // size of the shadow\r\n    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62], // the same for the shadow\r\n    popupAnchor: [-3, -76],\r\n  });\r\n\r\n  redIcon = L.icon({\r\n    iconUrl: leafRed,\r\n    shadowUrl: leafShadow,\r\n    iconSize: [38, 95], // size of the icon\r\n    shadowSize: [50, 64], // size of the shadow\r\n    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62], // the same for the shadow\r\n    popupAnchor: [-3, -86],\r\n  });\r\n\r\n  orangeIcon = L.icon({\r\n    iconUrl: leafOrange,\r\n    shadowUrl: leafShadow,\r\n    iconSize: [38, 95], // size of the icon\r\n    shadowSize: [50, 64], // size of the shadow\r\n    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62], // the same for the shadow\r\n    popupAnchor: [-3, -86],\r\n  });\r\n  componentDidMount=()=>{\r\n    console.log(mapData)\r\n    const {features}=mapData\r\n    let coordinates=features[0]?.geometry?.coordinates\r\n    for(var i=0;i<=coordinates.length-1;i++){\r\n        console.log(co)\r\n    }\r\n    console.log(coordinates)\r\n  }\r\n  render() {\r\n    const positionRedIcon = [this.state.redIcon.lat, this.state.redIcon.lng];\r\n    const positionGreenIcon = [\r\n      this.state.greenIcon.lat,\r\n      this.state.greenIcon.lng,\r\n    ];\r\n    const positionOrangeIcon = [\r\n      this.state.orangeIcon.lat,\r\n      this.state.orangeIcon.lng,\r\n    ];\r\n    // console.log(mapData)\r\n    return (\r\n      <div>\r\n        <Map className=\"map\" center={positionGreenIcon} zoom={this.state.zoom}>\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n        <GeoJSON data={mapData.features}/>\r\n{/* \r\n       <Marker position={positionGreenIcon} icon={this.grenIcon}>\r\n            <Popup>I am a green leaf</Popup>\r\n          </Marker>\r\n          <Marker position={positionRedIcon} icon={this.redIcon}>\r\n            <Popup>I am a red leaf</Popup>\r\n          </Marker>\r\n          <Marker position={positionOrangeIcon} icon={this.orangeIcon}>\r\n            <Popup>I am an orange leaf</Popup>\r\n          </Marker> */}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}